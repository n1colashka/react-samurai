{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/PostsForm/PostsForm.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Profile/MyPosts/Post/like.svg","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostsForm/PostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","Post","className","styles","item","src","alt","text","message","like","likesCount","likeIcon","PostsForm","validationSchema","yup","shape","typeError","max","initialValues","validateOnBlur","onSubmit","values","console","log","JSON","stringify","handleChange","handleBlur","dirty","handleSubmit","isValid","form","name","as","placeholder","onChange","onBlur","value","error","component","type","disabled","length","onClick","addPost","MyPosts","React","memo","postsItems","posts","map","post","id","title","list","MyPostsContainer","profilePage","ProfileStatusForm","status","deactivateEditMode","submitForm","autoFocus","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","statusWrapper","statusCaption","statusContent","updateStatus","onDoubleClick","ProfileInfo","profile","background","body","avatar","photos","large","about","fullName","lookingForAJobDescription","lookingForAJob","href","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.f76f2aaa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n}); \r\n\r\nconst withAuthRedirect = (Component) => {\r\n    const ComponentWithRedirect = (props) => {\r\n        if (!props.isAuth) return <Redirect to='/login' />;\r\n        return <Component {...props} />\r\n    }\r\n    \r\n    const ConnectedComponentWithRedirect = connect(mapStateToProps)(ComponentWithRedirect);\r\n\r\n    return ConnectedComponentWithRedirect;\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"MyPosts_title__11A1i\",\"form\":\"MyPosts_form__1cu11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__pI8HJ\",\"text\":\"Post_text__1T2GM\",\"like\":\"Post_like__3w6De\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PostsForm_form__437GK\",\"item\":\"PostsForm_item__24lIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"ProfileInfo_body__3eKPY\",\"avatar\":\"ProfileInfo_avatar__2p_gR\",\"about\":\"ProfileInfo_about__3iaT7\",\"background\":\"ProfileInfo_background__14ukB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusWrapper\":\"ProfileStatus_statusWrapper__1qL1V\",\"statusCaption\":\"ProfileStatus_statusCaption__1Dcyz\",\"statusContent\":\"ProfileStatus_statusContent__324qp\"};","export default __webpack_public_path__ + \"static/media/like.a9865e21.svg\";","import styles from \"./Post.module.css\";\r\nimport likeIcon from \"./like.svg\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <li className={styles.item}>\r\n            <img src=\"https://www.blexar.com/avatar.png\" alt=\"\" />\r\n            <div className={styles.text}>\r\n                <p>{props.message}</p>\r\n            </div>\r\n            <div className={styles.like}>\r\n                <span>{props.likesCount}</span>\r\n                <img src={likeIcon} alt=\"Like\" />\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import { Field, Form, Formik, ErrorMessage } from \"formik\";\r\nimport styles from \"./PostsForm.module.css\";\r\nimport * as yup from \"yup\";\r\n\r\nconst PostsForm = (props) => {\r\n    const addPost = (values) => {\r\n        props.addPost(values.text);\r\n        // values.text = \"\";\r\n    }\r\n    const validationSchema = yup.object().shape({\r\n        text: yup\r\n            .string()\r\n            .typeError(\"Value must be a string\")\r\n            .max(200)\r\n    });\r\n    return (\r\n        <Formik\r\n            initialValues={{ text: \"\" }}\r\n            validateOnBlur\r\n            onSubmit={(values) => console.log(JSON.stringify(values, null, 2))}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({ values, handleChange, handleBlur, handleSubmit, dirty, isValid }) => (\r\n                <Form className={`${styles.form} form`}>\r\n                    <div className={`${styles.item} item`}>\r\n                        <label>\r\n                            <Field\r\n                                name=\"text\"\r\n                                as=\"textarea\"\r\n                                placeholder=\"Enter new post text\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.text}\r\n                            />\r\n                        </label>\r\n                        <ErrorMessage\r\n                            className={`${styles.error} error`}\r\n                            name=\"text\"\r\n                            component=\"div\"\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.item} item`}>\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={(!isValid && !dirty) || (values.text.length === 0)}\r\n                            onClick={() => addPost(values)}\r\n                        >\r\n                            Add post\r\n                        </button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default PostsForm;","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport PostsForm from \"./PostsForm/PostsForm\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    const postsItems = props.posts.map(post => <Post message={post.text} key={post.id} likesCount={post.likesCount}/>);\r\n\r\n    return (\r\n        <div className={styles.posts}>\r\n            <div className={styles.title}>My posts:</div>\r\n            <div className={styles.form}>\r\n                <PostsForm addPost={props.addPost}/>\r\n            </div>\r\n            <ul className={styles.list}>\r\n                {postsItems}\r\n            </ul>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => ({ posts: state.profilePage.posts });\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport styles from \"./ProfileStatus.module.css\";\r\nimport * as yup from \"yup\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusForm = (props) => {\r\n    const validationSchema = yup.object().shape({\r\n        status: yup.string().typeError(\"Value must be a string\"),\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                status: props.status,\r\n            }}\r\n            onSubmit={(values) => props.deactivateEditMode(values.status)}\r\n            validateOnBlur\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({\r\n                values, handleChange, submitForm,\r\n                deactivateEditMode = () => {\r\n                    props.deactivateEditMode(values.status);\r\n                    submitForm();\r\n                }\r\n            }) => {\r\n                return (\r\n                    <Form>\r\n                        <Field\r\n                            name=\"status\"\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your status\"\r\n                            autoFocus={true}\r\n                            onChange={handleChange}\r\n                            onBlur={deactivateEditMode}\r\n                            value={values.status}\r\n                        />\r\n                    </Form>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => setEditMode(true);\r\n\r\n    const deactivateEditMode = (status) => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n        setStatus(status);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.statusWrapper}>\r\n            <div className={styles.statusCaption}>Status:</div>\r\n            {editMode && (\r\n                <div className={styles.statusContent}>\r\n                    <ProfileStatusForm status={props.status} deactivateEditMode={deactivateEditMode} />\r\n                </div>\r\n            )}\r\n            {!editMode && (\r\n                <div className={styles.statusContent} onDoubleClick={activateEditMode}>\r\n                    <span>{props.status || \"No status\"}</span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles.background}>\r\n                <img\r\n                    src=\"https://images.pexels.com/photos/5133461/pexels-photo-5133461.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n                    alt=\"\"\r\n                />\r\n            </div>\r\n            <div className={styles.body}>\r\n                <div className={styles.avatar}>\r\n                    <img src={props.profile.photos.large || \"https://i.stack.imgur.com/l60Hf.png\"} alt=\"\" />\r\n                </div>\r\n                <div className={styles.about}>\r\n                    <p>Name: <span>{props.profile.fullName}</span></p>\r\n                    <p>About: <span>{props.profile.lookingForAJobDescription}</span></p>\r\n                    <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                    <p>Job: <span>{props.profile.lookingForAJob ? 'Looking for a job' : 'Don\\'t looking for a job'}</span></p>\r\n                    <div>\r\n                        My contacts:\r\n                        <p>\r\n                            <a href={props.profile.contacts.github}>Github</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href={props.profile.contacts.vk}>vk</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href={props.profile.contacts.facebook}>facebook</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href={props.profile.contacts.instagram}>instagram</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href={props.profile.contacts.twitter}>twitter</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href={props.profile.contacts.website}>website</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href={props.profile.contacts.youtube}>youtube</a>\r\n                        </p>\r\n                        <p>\r\n                            <a href={props.profile.contacts.mainLink}>Main link</a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\r\nimport { getUserProfile, getUserStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId || this.props.authorizedUserId;\r\n        if (!userId) this.props.history.push(\"/login\");\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n    \r\n    render() {\r\n        return <Profile {...this.props} />\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n}); \r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}