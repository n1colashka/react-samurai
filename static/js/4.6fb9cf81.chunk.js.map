{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Messages/Messages.module.css","components/Messages/User/User.module.css","components/Messages/Message/Message.module.css","components/Messages/MessagesForm/MessagesForm.module.css","components/Messages/User/User.jsx","components/Messages/Message/Message.jsx","components/Messages/MessagesForm/MessagesForm.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","User","path","id","className","styles","user","activeClassName","active","src","alt","name","Message","sender","messageWrapper","message","text","MessagesForm","validationSchema","yup","shape","typeError","max","initialValues","validateOnBlur","onSubmit","values","console","log","JSON","stringify","handleChange","handleBlur","dirty","handleSubmit","isValid","form","item","as","placeholder","onChange","onBlur","value","error","component","type","disabled","length","onClick","addMessage","Messages","messagesItems","messages","map","usersItems","users","dialog","compose","messagesPage"],"mappings":"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","file":"static/js/4.6fb9cf81.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n}); \r\n\r\nconst withAuthRedirect = (Component) => {\r\n    const ComponentWithRedirect = (props) => {\r\n        if (!props.isAuth) return <Redirect to='/login' />;\r\n        return <Component {...props} />\r\n    }\r\n    \r\n    const ConnectedComponentWithRedirect = connect(mapStateToProps)(ComponentWithRedirect);\r\n\r\n    return ConnectedComponentWithRedirect;\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__2Szgk\",\"users\":\"Messages_users__2A54E\",\"dialog\":\"Messages_dialog__DlxU5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3HzNf\",\"active\":\"User_active__2kDCm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2ve2o\",\"i\":\"Message_i__BGpAb\",\"me\":\"Message_me__3SCsd\",\"messageWrapper\":\"Message_messageWrapper__3oFGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MessagesForm_form__315QY\"};","import styles from \"./User.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n    const path = `/messages/${props.id}`;\r\n\r\n    return (\r\n        <div className={styles.user}>\r\n            <NavLink to={path} activeClassName={styles.active}>\r\n                <img src=\"https://www.pngitem.com/pimgs/m/22-220721_circled-user-male-type-user-colorful-icon-png.png\" alt=\"user\" />\r\n                <span>{props.name}</span>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import styles from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    let sender = props.sender;\r\n\r\n    return (\r\n        <div className={props.messageWrapper}>\r\n            <div className={ `${styles.message} ${styles[sender]}`}>{props.text}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import { Field, Form, Formik, ErrorMessage } from \"formik\";\r\nimport styles from \"./MessagesForm.module.css\";\r\nimport * as yup from \"yup\";\r\n\r\nconst MessagesForm = (props) => {\r\n    const addMessage = (values) => {\r\n        props.addMessage(values.text);\r\n        // values.text = \"\";\r\n    }\r\n    const validationSchema = yup.object().shape({\r\n        text: yup\r\n            .string()\r\n            .typeError(\"Value must be a string\")\r\n            .max(200)\r\n    });\r\n    return (\r\n        <Formik\r\n            initialValues={{ text: \"\" }}\r\n            validateOnBlur\r\n            onSubmit={(values) => console.log(JSON.stringify(values, null, 2))}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({ values, handleChange, handleBlur, handleSubmit, dirty, isValid }) => (\r\n                <Form className={`${styles.form} form`}>\r\n                    <div className={`${styles.item} item`}>\r\n                        <label>\r\n                            <Field\r\n                                name=\"text\"\r\n                                as=\"textarea\"\r\n                                placeholder=\"Enter new message text\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.text}\r\n                            />\r\n                        </label>\r\n                        <ErrorMessage\r\n                            className={`${styles.error} error`}\r\n                            name=\"text\"\r\n                            component=\"div\"\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.item} item`}>\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={(!isValid && !dirty) || (values.text.length === 0)}\r\n                            onClick={() => addMessage(values)}\r\n                        >\r\n                            Send message\r\n                        </button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default MessagesForm;","import styles from \"./Messages.module.css\";\r\nimport User from \"./User/User\";\r\nimport Message from \"./Message/Message\";\r\nimport MessagesForm from \"./MessagesForm/MessagesForm\";\r\nimport React from \"react\";\r\n\r\nconst Messages = (props) => {    \r\n    const messagesItems = props.messages.map(message => <Message sender={message.sender} key={message.id} text={message.text} />) ;\r\n    const usersItems = props.users.map(user => <User name={user.name} key={user.id} id={user.id} />) ;\r\n\r\n    return (\r\n        <div className={styles.messages}>\r\n            <div className={styles.users}>\r\n                { usersItems}\r\n            </div>\r\n            <div className={styles.dialog}>\r\n                { messagesItems }\r\n                <MessagesForm addMessage={props.addMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Messages;\r\n","import { connect } from \"react-redux\";\r\nimport { addMessage } from \"../../redux/messages-reducer\";\r\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\r\nimport Messages from \"../Messages/Messages\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.messagesPage.users,\r\n        messages: state.messagesPage.messages,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { addMessage }),\r\n    withAuthRedirect,\r\n)(Messages);\r\n\r\n"],"sourceRoot":""}